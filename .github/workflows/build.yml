# Note: In a yml each level is padded by 2 spaces
name: Flutter

on:
  # Runs this action when you push on master
  push:
    branches: [ "main" ]
    tags: 
        - "v*.*.*"
  # Runs this when a PR against master is created
  pull_request:
    branches: [ "main" ]
permissions:
  contents: write
jobs:
  flutter_job:

    # The machine, we can also use windows-latest or ubuntu-latest
    # We are choosing macos-latest because we will be also building for iOS
    runs-on: macos-latest

    steps:

      # Clones the project on the machine
      - uses: actions/checkout@v4

      # Installs flutter and related dependency on this machine
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.6'
          # ^ If you want to use a specific version of flutter
      
      # Fetches proj dependencies from pub
      - name: Install dependencies
        run: flutter pub get
          # ^ If you want to use a specific version of flutter
          # Verifies if the dart code is formatted well
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Build apk
        run: flutter build apk --release --no-shrink
      - uses: actions/upload-artifact@v4
        with:
          name: release-apk-artifact
          path: build/app/outputs/apk/release/app-release.apk
      - name: Release apk
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/app/outputs/apk/release/app-release.apk
 
  # --set-exit-if-changed stops execution if the any code is not well formatted
  # --output=none prints files which needs to be formatted
